name: Release

on:
  push:
    tags:
      - '*'
defaults:
  run:
    shell: bash
jobs:
  release:
    env:
      BINARY_NAME: libidena_wasm.a
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux-x64
            os: ubuntu-latest
            artifact_name: 'libidena_wasm_linux_amd64'
          - build: macos-x64
            os: macos-11
            artifact_name: 'libidena_wasm_darwin_amd64'
          - build: macos-arm64
            os: macos-11.0
            target: aarch64-apple-darwin
            artifact_name: 'libidena_wasm_darwin_arm64'
          - build: windows-x64
            os: windows-2019
            artifact_name: 'libidena_wasm_windows_amd64'
            target: x86_64-pc-windows-gnu
          - build: linux-aarch64
            os: ubuntu-latest
            artifact_name: 'libidena_wasm_darwin_aarch64'
            target: aarch64-unknown-linux-gnu
      container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        if: matrix.os != 'windows-latest'
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - uses: actions-rs/toolchain@v1
        if: matrix.os == 'windows-latest'
        with:
          toolchain: stable-x86_64-pc-windows-gnu
          target: ${{ matrix.target }}

      - uses: actions-rs/cargo@v1
        if: matrix.os == 'windows-latest'
        with:
          toolchain: stable-x86_64-pc-windows-gnu
          command: build
          args: --release --all-features

      - uses: actions-rs/cargo@v1
        if: matrix.os != 'windows-latest'
        with:
          command: build
          args: --release --all-features

      - name: Rename output file
        run: |
          asset_name=${{ matrix.artifact_name }}
          mv target/release/${BINARY_NAME} ${asset_name}
          echo "ASSET_NAME=${asset_name}" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ env.ASSET_NAME }}

