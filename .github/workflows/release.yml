name: Release

on:
  push:
    tags:
      - '*'
defaults:
  run:
    shell: bash
jobs:
  release:
    env:
      BINARY_NAME: libidena_wasm.a
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux-x64
            os: ubuntu-latest
            artifact_name: 'libidena_wasm_linux_amd64.a'
          - build: macos-x64
            os: macos-latest
            artifact_name: 'libidena_wasm_darwin_amd64.a'
          - build: windows-x64
            os: windows-latest
            artifact_name: 'libidena_wasm_windows_amd64.a'
            target: x86_64-pc-windows-gnu
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        if: matrix.os != 'windows-latest'
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - uses: actions-rs/toolchain@v1
        if: matrix.os == 'windows-latest'
        with:
          toolchain: stable-x86_64-pc-windows-gnu
          target: ${{ matrix.target }}

      - uses: actions-rs/cargo@v1
        if: matrix.os == 'windows-latest'
        with:
          toolchain: stable-x86_64-pc-windows-gnu
          command: build
          args: --release --all-features

      - uses: actions-rs/cargo@v1
        if: matrix.os != 'windows-latest'
        with:
          command: build
          args: --release --all-features

      - name: Rename output file
        run: |
          asset_name=${{ matrix.artifact_name }}
          mv target/release/${BINARY_NAME} ${asset_name}
          echo "ASSET_NAME=${asset_name}" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ env.ASSET_NAME }}

  linux_aarch64:
    name: Linux aarch64
    runs-on: ubuntu-latest
    env:
      BINARY_NAME: libidena_wasm.a
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: aarch64-unknown-linux-gnu
      - name: Build cross image
        run: |
          docker build -t idena-wasm/aarch64 ${GITHUB_WORKSPACE}/.github/cross-linux-aarch64/
        env:
          CROSS_DOCKER_IN_DOCKER: true
      - name: Build idena-wasm binary
        run: |
          ${CARGO_BINARY} build --target=aarch64-unknown-linux-gnu --release
        env:
          CARGO_BINARY: docker run -v /var/run/docker.sock:/var/run/docker.sock -v ${GITHUB_WORKSPACE}:/project -w /project idena-wasm/aarch64 cross
          CROSS_DOCKER_IN_DOCKER: true
          PKG_CONFIG_PATH: /usr/lib/aarch64-linux-gnu/pkgconfig
          PKG_CONFIG_ALLOW_CROSS: true
      - name: Rename output file
        run: |
          asset_name=libidena_wasm_linux_aarch64
          mv target/release/${BINARY_NAME} ${asset_name}
          echo "ASSET_NAME=${asset_name}" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ env.ASSET_NAME }}
